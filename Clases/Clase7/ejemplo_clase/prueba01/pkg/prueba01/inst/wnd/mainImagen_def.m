## -*- texinfo -*-
## @deftypefn  {} {} dummy()
##
## This is a dummy function documentation. This file have a lot functions
## and each one have a little documentation. This text is to avoid a warning when
## install this file as part of package.
## @end deftypefn
##
## Set the graphics toolkit and force read this file as script file (not a function file).
##
graphics_toolkit qt;
##


##
##
## Begin callbacks definitions 
##

## @deftypefn  {} {} btn1_doIt (@var{src}, @var{data}, @var{mainImagen})
##
## Define a callback for default action of btn1 control.
##
## @end deftypefn
function btn1_doIt(src, data, mainImagen)

% El código que se indique aquí será ejecutado cuando el usuario presione en el botón.
% Por defecto, todos los eventos están desactivdados, para activarlos debe activar
% propertie 'generateCallback' from the properties editor

[file,path] = uigetfile ({'*.gif;*.png;*.jpg', 'Supported Picture Formats'}); %Ventana de dialogo para seleccionar la imagen
text=fullfile(path, file); %Direccion donde se encuentra la imagen

A=imread(text);
axes(mainImagen.img1)
imshow(A)

%Calcular el negativo de A
B=negativo(A); %La funcion negativo la implementamos en Octave
axes(mainImagen.img2)
imshow(B)



end

 
## @deftypefn  {} {@var{ret} = } show_mainImagen()
##
## Create windows controls over a figure, link controls with callbacks and return 
## a window struct representation.
##
## @end deftypefn
function ret = show_mainImagen()
  _scrSize = get(0, "screensize");
  _xPos = (_scrSize(3) - 793)/2;
  _yPos = (_scrSize(4) - 278)/2;
   mainImagen = figure ( ... 
	'Color', [0.941 0.941 0.941], ...
	'Position', [_xPos _yPos 793 278], ...
	'resize', 'off', ...
	'windowstyle', 'normal', ...
	'MenuBar', 'none');
	 set(mainImagen, 'visible', 'off');
  img1 = axes( ...
	'Units', 'pixels', ... 
	'parent',mainImagen, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [236 35 207 169]);
  Label_2 = uicontrol( ...
	'parent',mainImagen, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 13, 'FontUnits', 'points', ... 
	'FontWeight', 'bold', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [274 216 130 22], ... 
	'String', 'Imagen Cargada', ... 
	'TooltipString', '');
  btn1 = uicontrol( ...
	'parent',mainImagen, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.122 0.384 0.184], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.231 0.639 0.557], ... 
	'Position', [78 128 102 30], ... 
	'String', 'Cargar Imagen', ... 
	'TooltipString', '');
  img2 = axes( ...
	'Units', 'pixels', ... 
	'parent',mainImagen, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [520 36 209 168]);
  Label_3 = uicontrol( ...
	'parent',mainImagen, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 12, 'FontUnits', 'points', ... 
	'FontWeight', 'bold', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [539 216 171 22], ... 
	'String', 'Negativo de la Imagen', ... 
	'TooltipString', '');

  mainImagen = struct( ...
      'figure', mainImagen, ...
      'img1', img1, ...
      'Label_2', Label_2, ...
      'btn1', btn1, ...
      'img2', img2, ...
      'Label_3', Label_3);


  set (btn1, 'callback', {@btn1_doIt, mainImagen});
  dlg = struct(mainImagen);

%
% El código fuente escrito aquí será ejecutado cuando
% la ventana se haga visible. Funciona como el evento 'onLoad' de otros lenguajes.
%
pkg load image
pkg load video

  set(mainImagen.figure, 'visible', 'on');
  ret = mainImagen;
end

